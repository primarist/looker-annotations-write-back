{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Annotation": {
				"properties": {
					"id": {
						"type": "string"
					},
					"dashboardId": {
						"type": "string",
						"description": "ID of the dashboard this annotation is attached to"
					},
					"content": {
						"type": "string",
						"description": "Actual content of the note (HTML ? Markdown ?)"
					},
					"filters": {
						"type": "string",
						"description": "JSON stringified filters"
					},
					"url": {
						"type": "string",
						"description": "URL of the dashboard"
					},
					"explore": {
						"type": "string",
						"description": "Name of the looker explore"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time",
						"description": "Creation date of this note"
					}
				},
				"required": [
					"id",
					"dashboardId",
					"content",
					"filters",
					"url",
					"explore",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateAnnotation": {
				"properties": {
					"dashboardId": {
						"type": "string",
						"description": "ID of the dashboard this annotation is attached to"
					},
					"content": {
						"type": "string",
						"description": "Actual content of the note (HTML ? Markdown ?)"
					},
					"filters": {
						"type": "string",
						"description": "JSON stringified filters"
					},
					"url": {
						"type": "string",
						"description": "URL of the dashboard"
					},
					"explore": {
						"type": "string",
						"description": "Name of the looker explore"
					}
				},
				"required": [
					"dashboardId",
					"content",
					"filters",
					"url",
					"explore"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetAnnotationsParams": {
				"properties": {
					"dashboardId": {
						"type": "string",
						"description": "Return the annotations for a specific dashboard only"
					},
					"filters": {
						"type": "string",
						"description": "If provided, return only the annotations matching the given filters\nThese filters should be serialized as JSON"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_PatchAnnotation.Exclude_keyofPatchAnnotation.id__": {
				"properties": {
					"dashboardId": {
						"type": "string",
						"description": "ID of the dashboard this annotation is attached to"
					},
					"content": {
						"type": "string",
						"description": "Actual content of the note (HTML ? Markdown ?)"
					},
					"filters": {
						"type": "string",
						"description": "JSON stringified filters"
					},
					"url": {
						"type": "string",
						"description": "URL of the dashboard"
					},
					"explore": {
						"type": "string",
						"description": "Name of the looker explore"
					}
				},
				"required": [
					"dashboardId",
					"content",
					"filters",
					"url",
					"explore"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_PatchAnnotation.id_": {
				"$ref": "#/components/schemas/Pick_PatchAnnotation.Exclude_keyofPatchAnnotation.id__",
				"description": "Construct a type with the properties of T except for those in type K."
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "looker-annotations",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/annotations/{annotationId}": {
			"get": {
				"operationId": "GetAnnotation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Annotation"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Fetches a specific annotation by ID",
				"security": [],
				"parameters": [
					{
						"description": "ID of the target annotation",
						"in": "path",
						"name": "annotationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteAnnotation",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Deletes a specific annotation by ID",
				"security": [],
				"parameters": [
					{
						"description": "ID of the target annotation",
						"in": "path",
						"name": "annotationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateAnnotation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Annotation"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Update a specific annotation",
				"security": [],
				"parameters": [
					{
						"description": "ID of the target annotation",
						"in": "path",
						"name": "annotationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_PatchAnnotation.id_"
							}
						}
					}
				}
			}
		},
		"/annotations": {
			"post": {
				"operationId": "CreateAnnotation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Annotation"
								}
							}
						}
					}
				},
				"description": "Creates an annotation",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateAnnotation"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetAnnotations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Annotation"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Fetches annotations for a specific dashboard",
				"security": [],
				"parameters": [
					{
						"description": "Return the annotations for a specific dashboard only",
						"in": "query",
						"name": "dashboardId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If provided, return only the annotations matching the given filters\nThese filters should be serialized as JSON",
						"in": "query",
						"name": "filters",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}